
@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="container-fluid">

        <div class="card card-info">
            <div class="card-header">
                <h3 class="card-title">Add Customer Form</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            <form class="form-horizontal" id="fmAddCustomer">
                <div class="card-body">
                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Name" placeholder="Name">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Phone</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Phone" placeholder="Phone">
                        </div>
                    </div>



                    <div class="form-group row">
                        <label for="inputPassword3" class="col-sm-2 col-form-label">UserName</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="UserName" placeholder="UserName">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Password</label>
                        <div class="col-sm-10">
                            <input type="password" class="form-control" id="Password" placeholder="Password">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Address</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Address" placeholder="Address">
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="submit" class="btn btn-info w-50">Add</button>
                    <button type="submit" class="btn btn-default float-right w-50">Cancel</button>
                </div>
                <!-- /.card-footer -->
            </form>
        </div>

    </div>
    <!-- /.container-fluid -->
</section>



@section Scripts{

    <script>
        function addCustomer() {
            const fmAddCustomer = $("#fmAddCustomer");
            const Name = $("#Name");
            const Phone = $("#Phone");
            const UserName = $("#UserName");
            const Password = $("#Password");
            const Address = $("#Address");
            const url = `https://localhost:44328/api/customers`;



            fmAddCustomer.on("submit", e => {
                e.preventDefault();


                let data = {
                    Name: $("#Name").val(),
                    Phone: Phone.val(),
                    UserName: UserName.val(),
                    Password: Password.val(),
                    Address: Address.val()
                }


                if (data.Name === "" || data.Phone === "" || data.UserName === "" || data.Password === "" || data.Address === "") {

                    let timerInterval
                    Swal.fire({
                        title: 'Invalid Value!',
                        //  html: 'I will close in <b></b> milliseconds.',
                        timer: 2000,
                        icon: "error",
                        //  timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelector('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        willClose: () => {
                            clearInterval(timerInterval)
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {
                            console.log('I was closed by the timer')
                        }
                    })

                    return;
                }




                   $.ajax({
                        type: "post",
                        url: url,
                        data: data,
                        success: data => {
                            console.log(data);
                            let timerInterval
                            Swal.fire({
                                title: 'Add Customer Success!',
                              //  html: 'I will close in <b></b> milliseconds.',
                                timer: 2000,
                                icon:"success",
                              //  timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                willClose: () => {
                                    clearInterval(timerInterval)
                                }
                            }).then((result) => {
                                /* Read more about handling dismissals below */
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    console.log('I was closed by the timer')
                                }
                            })
                       },
                        // ajax error
                        error: er => {
                            console.log(er);

                            let timerInterval
                            Swal.fire({
                                title: 'Add Customer Fail!',
                                //  html: 'I will close in <b></b> milliseconds.',
                                timer: 2000,
                                icon: "error",
                                //  timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                willClose: () => {
                                    clearInterval(timerInterval)
                                }
                            }).then((result) => {
                                /* Read more about handling dismissals below */
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    console.log('I was closed by the timer')
                                }
                            })
                        }
                    })





                console.log(data);

                console.log(Name.val());


            })




        }
        addCustomer();
    </script>
}