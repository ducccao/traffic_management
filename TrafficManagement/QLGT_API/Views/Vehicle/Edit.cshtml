
@{
    ViewBag.Title = "Vehicle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="content">
    <div class="container-fluid">
        <div class="card card-dark">
            <div class="card-header">
                <h3 class="card-title text-white">Edit Form</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            <form class="form-horizontal" id="fmEditVehicle">
                <div class="card-body">

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Vehicle ID</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Id" placeholder="Id">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Name</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Name" placeholder="Name">
                        </div>
                    </div>


                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Capacity</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Capacity" placeholder="Capacity">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Type</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Type" placeholder="Type">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">License Plates</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="LicensePlates" placeholder="License Plates">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Price</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Price" placeholder="Price">
                        </div>
                    </div>



                    <div class="form-group row">
                        <label for="inputEmail3" class="col-sm-2 col-form-label">Status</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="Status" placeholder="Status">
                        </div>
                    </div>








                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="submit" class="btn btn-dark w-50">Edit</button>
                    <button type="submit" class="btn btn-default float-right w-50">Cancel</button>
                </div>
                <!-- /.card-footer -->
            </form>
        </div>

    </div>
    <!-- /.container-fluid -->
</section>


@section Scripts{
    <script>
        function editProfile() {

            const fmEditProfile = $("#fmEditVehicle");

            const Name = $("#Name");
            const Capacity = $("#Capacity");
            const Type = $("#Type");
            const LicensePlates = $("#LicensePlates");
            const Status = $("#Status");
            const Price = $("#Price");

            const today = new Date();
            const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
            const time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            const CreatedAt = date + ' ' + time;




            fmEditProfile.on("submit", e => {
                e.preventDefault();
                const Id = $("#Id");

                const url = `https://localhost:44328/api/vehicles/${Id.val()}`;

                const data = {
                    Id: Id.val(),
                    Name: Name.val(),
                    Capacity: Capacity.val(),
                    Type: Type.val(),
                    LicensePlates: LicensePlates.val(),
                    Price: Price.val(),
                    SignedUpDate: CreatedAt,
                    Status: Status.val()
                }

                if (data.Name === "" || data.Capacity === "" || data.Type === "" || data.LicensePlates === ""
                    || data.Price === ""
                    || data.Status === "") {

                    let timerInterval
                    Swal.fire({
                        title: 'Invalid Value!',
                        //  html: 'I will close in <b></b> milliseconds.',
                        timer: 2000,
                        icon: "error",
                        //  timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelector('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        willClose: () => {
                            clearInterval(timerInterval)
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {
                            console.log('I was closed by the timer')
                        }
                    })

                    return;
                }


                $.ajax({
                    type: "put",
                    url: url,
                    data: data,
                    success: data => {
                        console.log(data);

                        let timerInterval
                        Swal.fire({
                            title: 'Edit Vehicle Success!',
                            //  html: 'I will close in <b></b> milliseconds.',
                            timer: 2000,
                            icon: "success",
                            //  timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading()
                                timerInterval = setInterval(() => {
                                    const content = Swal.getContent()
                                    if (content) {
                                        const b = content.querySelector('b')
                                        if (b) {
                                            b.textContent = Swal.getTimerLeft()
                                        }
                                    }
                                }, 100)
                            },
                            willClose: () => {
                                clearInterval(timerInterval)
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {
                                console.log('I was closed by the timer')
                            }
                        })
                    },
                    error: er => {
                        console.log(er);

                        let timerInterval
                        Swal.fire({
                            title: 'Edit Vehicle Fail!',
                            //  html: 'I will close in <b></b> milliseconds.',
                            timer: 2000,
                            icon: "error",
                            //  timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading()
                                timerInterval = setInterval(() => {
                                    const content = Swal.getContent()
                                    if (content) {
                                        const b = content.querySelector('b')
                                        if (b) {
                                            b.textContent = Swal.getTimerLeft()
                                        }
                                    }
                                }, 100)
                            },
                            willClose: () => {
                                clearInterval(timerInterval)
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {
                                console.log('I was closed by the timer')
                            }
                        })
                    }
                })


                console.log(data);
            })
        }

        editProfile();
    </script>
}