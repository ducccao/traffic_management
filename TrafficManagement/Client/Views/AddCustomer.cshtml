<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>AdminLTE 3 | Dashboard</title>

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
    <link rel="stylesheet" href="/CSS/fontawesome.min.css" />
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="/CSS/tempusdominus-bootstrap-4.min.css" />
    <!-- iCheck -->
    <link rel="stylesheet" href="/CSS/icheck-bootstrap.min.css" />
    <!-- JQVMap -->
    <link rel="stylesheet" href="/CSS/jqvmap.min.css" />
    <!-- Theme style -->
    <link rel="stylesheet" href="/CSS/adminlte.min.css" />
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="/CSS/OverlayScrollbars.min.css" />
    <!-- Daterange picker -->
    <link rel="stylesheet" href="/CSS/daterangepicker.css" />
    <!-- summernote -->
    <link rel="stylesheet" href="/CSS/summernote-bs4.min.css" />
</head>

<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button">
                        <i class="fas fa-bars"></i>
                    </a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="/" class="nav-link">Home</a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="#" class="nav-link">Contact</a>
                </li>
            </ul>

            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/login" role="button">
                        <i class="fas fa-sign-out-alt">Sign out </i>
                    </a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="index3.html" class="brand-link">
                <img src="/IMG/AdminLTELogo.png" alt="AdminLTE Logo" class="brand-image img-circle elevation-3" style="opacity: 0.8" />
                <span class="brand-text font-weight-light">Admin Page</span>
            </a>

            <!-- Sidebar -->
            <div>
                @Html.Partial("Sidebar")
            </div>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <h1 class="m-0">Add Customer </h1>
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-6">
                            <ol class="breadcrumb float-sm-right">
                                <li class="breadcrumb-item"><a href="#">Home</a></li>
                                <li class="breadcrumb-item active">Dashboard v1</li>
                            </ol>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">

                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title">Add Customer Form</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form class="form-horizontal" id="fmAddCustomer">
                            <div class="card-body">
                                <div class="form-group row">
                                    <label for="inputEmail3" class="col-sm-2 col-form-label">Name</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Name" placeholder="Name">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputEmail3" class="col-sm-2 col-form-label">Phone</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Phone" placeholder="Phone">
                                    </div>
                                </div>



                                <div class="form-group row">
                                    <label for="inputPassword3" class="col-sm-2 col-form-label">UserName</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="UserName" placeholder="UserName">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="inputEmail3" class="col-sm-2 col-form-label">Password</label>
                                    <div class="col-sm-10">
                                        <input type="password" class="form-control" id="Password" placeholder="Password">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="inputEmail3" class="col-sm-2 col-form-label">Address</label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="Address" placeholder="Address">
                                    </div>
                                </div>
                            </div>
                            <!-- /.card-body -->
                            <div class="card-footer">
                                <button type="submit" class="btn btn-info w-50">Add</button>
                                <button type="submit" class="btn btn-default float-right w-50">Cancel</button>
                            </div>
                            <!-- /.card-footer -->
                        </form>
                    </div>

                </div>
                <!-- /.container-fluid -->
            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->
        <footer class="main-footer">
            <strong>
                Copyright &copy; 2014-2020
                <a href="https://adminlte.io">AdminLTE.io</a>.
            </strong>
            All rights reserved.
            <div class="float-right d-none d-sm-inline-block">
                <b>Version</b> 3.1.0-rc
            </div>
        </footer>

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="/JS/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="/JS/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge("uibutton", $.ui.button);
    </script>
    <!-- Bootstrap 4 -->
    <script src="/JS/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="/JS/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="/JS/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="/JS/jquery.vmap.min.js"></script>
    <!--<script src="plugins/jqvmap/maps/jquery.vmap.usa.js"></script>-->
    <!-- jQuery Knob Chart -->
    <script src="/JS/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="/JS/moment.min.js"></script>
    <script src="/JS/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="/JS/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="/JS/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="/JS/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="/JS/adminlte.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="/JS/demo.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="/JS/dashboard.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
        function addCustomer() {
            const fmAddCustomer = $("#fmAddCustomer");
            const Name = $("#Name");
            const Phone = $("#Phone");
            const UserName = $("#UserName");
            const Password = $("#Password");
            const Address = $("#Address");
            const url = `https://localhost:44328/api/customers`;



            fmAddCustomer.on("submit", e => {
                e.preventDefault();


                let data = {
                    Name: $("#Name").val(),
                    Phone: Phone.val(),
                    UserName: UserName.val(),
                    Password: Password.val(),
                    Address: Address.val()
                }


                if (data.Name === "" || data.Phone === "" || data.UserName === "" || data.Password === "" || data.Address === "") {

                    let timerInterval
                    Swal.fire({
                        title: 'Invalid Value!',
                        //  html: 'I will close in <b></b> milliseconds.',
                        timer: 2000,
                        icon: "error",
                        //  timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelector('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        willClose: () => {
                            clearInterval(timerInterval)
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {
                            console.log('I was closed by the timer')
                        }
                    })

                    return;
                }




                   $.ajax({
                        type: "post",
                        url: url,
                        data: data,
                        success: data => {
                            console.log(data);
                            let timerInterval
                            Swal.fire({
                                title: 'Add Customer Success!',
                              //  html: 'I will close in <b></b> milliseconds.',
                                timer: 2000,
                                icon:"success",
                              //  timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                willClose: () => {
                                    clearInterval(timerInterval)
                                }
                            }).then((result) => {
                                /* Read more about handling dismissals below */
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    console.log('I was closed by the timer')
                                }
                            })
                       },
                        // ajax error
                        error: er => {
                            console.log(er);

                            let timerInterval
                            Swal.fire({
                                title: 'Add Customer Fail!',
                                //  html: 'I will close in <b></b> milliseconds.',
                                timer: 2000,
                                icon: "error",
                                //  timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading()
                                    timerInterval = setInterval(() => {
                                        const content = Swal.getContent()
                                        if (content) {
                                            const b = content.querySelector('b')
                                            if (b) {
                                                b.textContent = Swal.getTimerLeft()
                                            }
                                        }
                                    }, 100)
                                },
                                willClose: () => {
                                    clearInterval(timerInterval)
                                }
                            }).then((result) => {
                                /* Read more about handling dismissals below */
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    console.log('I was closed by the timer')
                                }
                            })
                        }
                    })





                console.log(data);

                console.log(Name.val());


            })




        }
        addCustomer();
    </script>


</body>
</html>